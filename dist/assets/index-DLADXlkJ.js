import{initializeApp as y}from"https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js";import{getFirestore as f,addDoc as h,collection as w}from"https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js";import{getAuth as b,onAuthStateChanged as E,signInAnonymously as I}from"https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function o(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(n){if(n.ep)return;n.ep=!0;const s=o(n);fetch(n.href,s)}})();const v={apiKey:"AIzaSyB-ve_suzb3nULDHJE4G_gkHQcMx97asf8",authDomain:"nilacseruet.github.io",projectId:"quize-44349",storageBucket:"quize-44349.firebasestorage.app",messagingSenderId:"80986581205",appId:"1:80986581205:web:b44731bdefbf15a8959a5c",measurementId:"G-K3XP09NTJ1"},g=y(v);window.db=f(g);window.auth=b(g);window.firebase={collection:w,addDoc:h,signInAnonymously:I,onAuthStateChanged:E};const{auth:c,db:z}=window,{collection:A,addDoc:S,signInAnonymously:B,onAuthStateChanged:q}=window.firebase;async function x(){try{return(await(await fetch("input/questions.json")).json()).questions}catch(t){throw console.error("Error loading questions:",t),t}}function C(t){const e=document.getElementById("quiz-form"),o=t.map((r,n)=>`
        <div class="question-group" data-question-id="${r.id}">
            <div class="question-text">${n+1}. ${r.text}</div>
            <div class="choices-group">
                ${r.options.map((s,i)=>`
                    <label class="choice-container">
                        <input type="radio" name="${r.id}" value="${i}" required>
                        ${s}
                    </label>
                `).join("")}
            </div>
            <div class="correct-answer-text"></div>
        </div>
    `).join("");document.getElementById("score-banner"),e.innerHTML=o+e.innerHTML.substring(e.innerHTML.indexOf('<div id="score-banner"'))}function L(t,e){e.forEach(o=>{const r=document.querySelector(`[data-question-id="${o.id}"]`),n=t.get(o.id),s=o.correctAnswer.toString();if(r.querySelectorAll(".choice-container").forEach((a,m)=>{const u=a.querySelector('input[type="radio"]');u.value===n?n===s?a.classList.add("correct"):a.classList.add("incorrect"):u.value===s&&a.classList.add("correct"),u.disabled=!0}),n!==s){const a=r.querySelector(".correct-answer-text");a.textContent=`Correct answer: ${o.options[o.correctAnswer]}`,a.style.display="block"}})}function $(t,e){let o=0;return e.forEach(r=>{t.get(r.id)===r.correctAnswer.toString()&&o++}),{score:o,totalQuestions:e.length,percentage:o/e.length*100}}let l=[],p=[];async function M(){try{const e=await(await fetch("input/group.json",{cache:"no-store"})).json();return document.getElementById("quiz_title").innerHTML=e.quiz_title,console.log("Quiz title loaded:",e.quiz_title),e.quiz_title}catch(t){throw console.error("Error loading quiz_title:",t),t}}async function T(){try{return(await(await fetch("input/group.json")).json()).groups}catch(t){throw console.error("Error loading groups:",t),t}}function D(t){const e=document.getElementById("group"),o='<option value="" disabled selected>Select Group *</option>';e.innerHTML=o,t.forEach(r=>{const n=document.createElement("option");n.value=r.value,n.textContent=r.label,e.appendChild(n)})}function Q(t){const e=document.getElementById("auth-state");e.style.display="block",t?(e.textContent=`Authenticated (Anonymous User ID: ${t.uid})`,e.style.backgroundColor="#e6ffe6",e.style.color="#006600"):(e.textContent="Not authenticated",e.style.backgroundColor="#ffe6e6",e.style.color="#990000")}function d(t,e){const o=document.getElementById("successMessage"),r=document.getElementById("error");t==="success"?(o.textContent=e,o.style.display="block",r.style.display="none",setTimeout(()=>{o.style.display="none"},3e3)):(r.textContent=e,r.style.display="block",o.style.display="none")}function O(t){const e=`Quiz Score: ${t.score}/${t.totalQuestions} (${t.percentage.toFixed(2)}%)`,o=document.getElementById("top-score-banner");o.textContent=e,o.style.display="block";const r=document.getElementById("bottom-score-banner");r.textContent=e,r.style.display="block"}async function P(t){t.preventDefault();const e=document.getElementById("submit-btn");e.disabled=!0;try{if(!c.currentUser)throw new Error("Please wait for authentication to complete");const o=document.getElementById("name").value.trim(),r=document.getElementById("group").value,n=document.getElementById("quiz_title").textContent;if(!o)throw new Error("Please enter your name");if(!r)throw new Error("Please select your group");const s=new FormData(t.target),i=$(s,l);document.getElementById("marks").value=i.score;const a=i.score,m={Name:o,Group:r,Marks:a,Quiz_title:n,Percentage:parseFloat(i.percentage.toFixed(2)),Timestamp:new Date().toISOString(),UserId:c.currentUser.uid};await S(A(z,"quiz"),m),O(i),L(s,l),d("success","Quiz submitted and data saved successfully!"),document.getElementById("name").value="",document.getElementById("group").value="",document.getElementById("marks").value="",e.style.display="none"}catch(o){console.error("Error submitting data:",o),d("error",o.message),e.disabled=!1}}async function j(){try{[l,p]=await Promise.all([x(),T(),M()]),C(l),D(p),q(c,e=>{console.log("Auth state changed:",e?"authenticated":"not authenticated"),Q(e)}),await B(c),console.log("Anonymous authentication initiated"),document.getElementById("quiz-form").addEventListener("submit",P)}catch(t){console.error("Error initializing app:",t),d("error",t.message)}}j();
